{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Authentication API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  verifyToken: () => api.get('/auth/verify')\n};\n\n// Search API\nexport const searchAPI = {\n  autocomplete: (query, system = 'all', limit = 10) => api.get('/autocomplete', {\n    params: {\n      q: query,\n      system,\n      limit\n    }\n  }),\n  similarity: (query, target = 'all', limit = 5) => api.get('/similarity', {\n    params: {\n      q: query,\n      target,\n      limit\n    }\n  })\n};\n\n// Mapping API\nexport const mappingAPI = {\n  generateMappings: (code, system = 'NAMASTE') => api.get(`/map/${code}`, {\n    params: {\n      system\n    }\n  }),\n  getDualCoding: code => api.get(`/dual-coding/${code}`),\n  saveMappingFeedback: (mappingId, feedback) => api.post(`/mappings/${mappingId}/feedback`, feedback)\n};\n\n// FHIR API\nexport const fhirAPI = {\n  lookup: (system, code) => api.get('/fhir/$lookup', {\n    params: {\n      system,\n      code\n    }\n  }),\n  translate: (sourceSystem, sourceCode, targetSystem) => api.get('/fhir/$translate', {\n    params: {\n      sourceSystem,\n      sourceCode,\n      targetSystem\n    }\n  }),\n  generateBundle: code => api.get(`/fhir/bundle/${code}`),\n  uploadBundle: bundle => api.post('/fhir/upload', bundle)\n};\n\n// Analytics API\nexport const analyticsAPI = {\n  getStats: () => api.get('/stats'),\n  getPopularMappings: () => api.get('/analytics/popular-mappings'),\n  getConfidenceDistribution: () => api.get('/analytics/confidence-distribution'),\n  getUsageMetrics: () => api.get('/analytics/usage-metrics')\n};\n\n// Terminology API\nexport const terminologyAPI = {\n  getNamesteCodes: () => api.get('/namaste-codes'),\n  getSystemInfo: system => api.get(`/systems/${system}`),\n  exportData: type => api.get(`/export/${type}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","response","error","_error$response","status","removeItem","window","location","href","Promise","reject","authAPI","login","credentials","post","register","userData","verifyToken","get","searchAPI","autocomplete","query","system","limit","params","q","similarity","target","mappingAPI","generateMappings","code","getDualCoding","saveMappingFeedback","mappingId","feedback","fhirAPI","lookup","translate","sourceSystem","sourceCode","targetSystem","generateBundle","uploadBundle","bundle","analyticsAPI","getStats","getPopularMappings","getConfidenceDistribution","getUsageMetrics","terminologyAPI","getNamesteCodes","getSystemInfo","exportData","type"],"sources":["C:/Users/MyPC/OneDrive/Documents/GitHub/DviCode/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Authentication API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  verifyToken: () => api.get('/auth/verify'),\r\n};\r\n\r\n// Search API\r\nexport const searchAPI = {\r\n  autocomplete: (query, system = 'all', limit = 10) => \r\n    api.get('/autocomplete', { params: { q: query, system, limit } }),\r\n  \r\n  similarity: (query, target = 'all', limit = 5) =>\r\n    api.get('/similarity', { params: { q: query, target, limit } }),\r\n};\r\n\r\n// Mapping API\r\nexport const mappingAPI = {\r\n  generateMappings: (code, system = 'NAMASTE') =>\r\n    api.get(`/map/${code}`, { params: { system } }),\r\n  \r\n  getDualCoding: (code) =>\r\n    api.get(`/dual-coding/${code}`),\r\n  \r\n  saveMappingFeedback: (mappingId, feedback) =>\r\n    api.post(`/mappings/${mappingId}/feedback`, feedback),\r\n};\r\n\r\n// FHIR API\r\nexport const fhirAPI = {\r\n  lookup: (system, code) =>\r\n    api.get('/fhir/$lookup', { params: { system, code } }),\r\n  \r\n  translate: (sourceSystem, sourceCode, targetSystem) =>\r\n    api.get('/fhir/$translate', { \r\n      params: { sourceSystem, sourceCode, targetSystem } \r\n    }),\r\n  \r\n  generateBundle: (code) =>\r\n    api.get(`/fhir/bundle/${code}`),\r\n  \r\n  uploadBundle: (bundle) =>\r\n    api.post('/fhir/upload', bundle),\r\n};\r\n\r\n// Analytics API\r\nexport const analyticsAPI = {\r\n  getStats: () => api.get('/stats'),\r\n  getPopularMappings: () => api.get('/analytics/popular-mappings'),\r\n  getConfidenceDistribution: () => api.get('/analytics/confidence-distribution'),\r\n  getUsageMetrics: () => api.get('/analytics/usage-metrics'),\r\n};\r\n\r\n// Terminology API\r\nexport const terminologyAPI = {\r\n  getNamesteCodes: () => api.get('/namaste-codes'),\r\n  getSystemInfo: (system) => api.get(`/systems/${system}`),\r\n  exportData: (type) => api.get(`/export/${type}`),\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}