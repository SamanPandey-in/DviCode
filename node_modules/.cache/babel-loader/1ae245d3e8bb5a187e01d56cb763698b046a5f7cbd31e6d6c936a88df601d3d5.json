{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MyPC\\\\OneDrive\\\\Documents\\\\GitHub\\\\DviCode\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    if (token) {\n      // Verify token validity\n      authAPI.verifyToken().then(response => {\n        setUser(response.data.user);\n      }).catch(() => {\n        logout();\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n  const login = async credentials => {\n    try {\n      const response = await authAPI.login(credentials);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      toast.success(`Welcome back, ${user.username}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      setToken(token);\n      setUser(user);\n      toast.success(`Account created successfully! Welcome, ${user.username}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","verifyToken","then","response","data","catch","logout","finally","login","credentials","setItem","success","username","error","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/MyPC/OneDrive/Documents/GitHub/DviCode/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      // Verify token validity\r\n      authAPI.verifyToken()\r\n        .then(response => {\r\n          setUser(response.data.user);\r\n        })\r\n        .catch(() => {\r\n          logout();\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authAPI.login(credentials);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      \r\n      toast.success(`Welcome back, ${user.username}!`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authAPI.register(userData);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      setToken(token);\r\n      setUser(user);\r\n      \r\n      toast.success(`Account created successfully! Welcome, ${user.username}!`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}